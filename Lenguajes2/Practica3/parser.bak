#lang plai
(require (file "./grammars.rkt"))

;; Toma una lista de números, symbolos o listas
;; y la traduce a un árbol de sintaxis abstracta WAE
;; A::=<number>
;;    | <symbol>
;;    | listof(A)
;; parse: A -> WAE
;; parse: s-expression -> WAE
(define (parse sexp)
  (cond
    [(number? sexp) (num sexp)]
    [ (list? sexp)
       (case (first sexp)
         [ (+) (                                                       add ((parse (second sexp)) (parse (third sexp))) )]
         [ (-) (sub (parse (second sexp)) (parse (third sexp)))]
         [ (with) (with (sexp)(sexp)(sexp) ) ]
       )
    ]  
  )
 )